name: Diff-Report

on: 
  pull_request:
    types: [opened, reopened, synchronize, edited]
  issue_comment:
    types: [created]

jobs:
  make_report:
    env:
      pr_body: ${{ github.event.pull_request.body }}
      issue_body: ${{github.event.issue.body}}
    runs-on: ubuntu-latest

    steps: 
       
     - name: Get body
       run: |
        echo "${{env.issue_body}}" > text
        echo "${{env.pr_body}}" > text_pr
        cat text_pr >> text
        echo ${GITHUB_CONTEXT}
       
     - name: Parse PR body
       run: |
        grep "^Diff Regression projects:" text > temp
        sed 's/Diff Regression projects: //' temp > proj
        grep "^Diff Regression config:" text > temp
        sed 's/Diff Regression config: //' temp > config
        cat proj
        cat config
        
     - name: Download files 
       run: |
        wget -q -i proj -O proj.properties
        wget -q -i config -O config.xml
        ls -la
        
     - name: Download checkstyle
       uses: actions/checkout@v2
       with:
        repository: checkstyle/checkstyle
        path: checkstyle
        fetch-depth: 0
        
        
     - name: Check branches
       run: |
         cd checkstyle
         git branch -r
         git checkout -b new_branch
         cd ../
     
     - name: Download contribution
       uses: actions/checkout@v2
       with:
        repository: checkstyle/contribution
        path: contribution
         
     - name: Print branch
       run: |
         echo ${GITHUB_HEAD_REF}
       
#     - name: Try groovy
#       run: |
#         mv config.xml ./contribution/checkstyle-tester/
#         mv proj.properties ./contribution/checkstyle-tester/
#         ls -la
#         cd contribution/checkstyle-tester
#         ls -la
#         java -version
#         mvn -version
#         sudo apt install groovy
#         groovy -version
#         groovy diff.groovy -r ../../checkstyle -b master -p new_branch -c config.xml -l proj.properties
     
     - name: Check what in dir
       run: ls -la
#     - name: Create a message
#       run: |
#        sed -n 1,2p proj.properties > message
#        sed -n 1,2p config.xml > temp
#        cat temp >> message
#        echo Name of head branch: ${GITHUB_HEAD_REF} > temp
#        cat temp >> message
#        echo Name of base branch: ${GITHUB_BASE_REF} > temp
#        cat temp >> message
#        cat message
        
     - name: Set output
       id: out
       run: echo ::set-output name=message::$(cat message)   
     - name: print output
       run: echo '${{steps.out.outputs.message}}'
#    - name: Checkout
#      uses: actions/checkout@v1
      
     - name: Comment PR
       uses:  kate2513/javascript-test-action@master 
       with:
        message: ${{steps.out.outputs.message}}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
